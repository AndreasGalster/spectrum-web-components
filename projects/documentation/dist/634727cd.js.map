{"version":3,"file":"634727cd.js","sources":["../node_modules/@spectrum-web-components/overlay/src/overlay-trigger.css.js","../node_modules/@spectrum-web-components/overlay/src/OverlayTrigger.js"],"sourcesContent":["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { css } from 'lit-element';\nconst styles = css `\n:host([disabled]) #trigger{pointer-events:none}#overlay-content{display:none}\n`;\nexport default styles;\n//# sourceMappingURL=overlay-trigger.css.js.map","/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { __decorate } from \"tslib\";\nimport { html, LitElement, property, } from 'lit-element';\nimport { openOverlay } from './loader.js';\nimport overlayTriggerStyles from './overlay-trigger.css.js';\n/**\n * A overlay trigger component for displaying overlays relative to other content.\n * @element overlay-trigger\n *\n * @slot hover-content - The content that will be displayed on hover\n * @slot click-content - The content that will be displayed on click\n */\nexport class OverlayTrigger extends LitElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * @type {\"auto\" | \"auto-start\" | \"auto-end\" | \"top\" | \"bottom\" | \"right\" | \"left\" | \"top-start\" | \"top-end\" | \"bottom-start\" | \"bottom-end\" | \"right-start\" | \"right-end\" | \"left-start\" | \"left-end\" | \"none\"}\n         * @attr\n         */\n        this.placement = 'bottom';\n        this.offset = 6;\n        this.disabled = false;\n        this.hoverOverlayReady = Promise.resolve();\n    }\n    static get styles() {\n        return [overlayTriggerStyles];\n    }\n    render() {\n        return html `\n            <div\n                id=\"trigger\"\n                @click=${this.onTrigger}\n                @mouseenter=${this.onTrigger}\n                @mouseleave=${this.onTrigger}\n            >\n                <slot\n                    @slotchange=${this.onTargetSlotChange}\n                    name=\"trigger\"\n                ></slot>\n            </div>\n            <div id=\"overlay-content\">\n                <slot\n                    @slotchange=${this.onClickSlotChange}\n                    name=\"click-content\"\n                ></slot>\n                <slot\n                    @slotchange=${this.onHoverSlotChange}\n                    name=\"hover-content\"\n                ></slot>\n            </div>\n        `;\n    }\n    get overlayOptions() {\n        return {\n            offset: this.offset,\n            placement: this.placement,\n            receivesFocus: this.type && this.type !== 'inline' ? 'auto' : undefined,\n        };\n    }\n    onTrigger(event) {\n        if (this.disabled) {\n            return;\n        }\n        switch (event.type) {\n            case 'click':\n                this.onTriggerClick();\n                return;\n            case 'mouseenter':\n                this.onTriggerMouseEnter();\n                return;\n            case 'mouseleave':\n                this.onTriggerMouseLeave();\n                return;\n        }\n    }\n    async onTriggerClick() {\n        /* istanbul ignore else */\n        if (this.targetContent && this.clickContent) {\n            if (this.type === 'modal') {\n                const firstFocusable = this.querySelector('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n                if (!firstFocusable) {\n                    this.clickContent.tabIndex = 0;\n                }\n            }\n            const { targetContent, clickContent } = this;\n            this.closeClickOverlay = await OverlayTrigger.openOverlay(targetContent, this.type ? this.type : 'click', clickContent, this.overlayOptions);\n        }\n    }\n    async onTriggerMouseEnter() {\n        /* istanbul ignore else */\n        if (this.targetContent && this.hoverContent) {\n            let overlayReady = () => {\n                return;\n            };\n            this.hoverOverlayReady = new Promise((res) => {\n                overlayReady = res;\n            });\n            const { targetContent, hoverContent } = this;\n            this.closeHoverOverlay = await OverlayTrigger.openOverlay(targetContent, 'hover', hoverContent, this.overlayOptions);\n            overlayReady();\n        }\n    }\n    async onTriggerMouseLeave() {\n        await this.hoverOverlayReady;\n        /* istanbul ignore else */\n        if (this.closeHoverOverlay) {\n            this.closeHoverOverlay();\n            delete this.closeHoverOverlay;\n        }\n    }\n    onClickSlotChange(event) {\n        const content = this.extractSlotContentFromEvent(event);\n        this.clickContent = content;\n    }\n    onHoverSlotChange(event) {\n        const content = this.extractSlotContentFromEvent(event);\n        this.hoverContent = content;\n    }\n    onTargetSlotChange(event) {\n        const content = this.extractSlotContentFromEvent(event);\n        this.targetContent = content;\n    }\n    extractSlotContentFromEvent(event) {\n        /* istanbul ignore if */\n        if (!event.target) {\n            return;\n        }\n        const slot = event.target;\n        const nodes = slot.assignedNodes();\n        return nodes.find((node) => node instanceof HTMLElement);\n    }\n    disconnectedCallback() {\n        /* istanbul ignore else */\n        if (this.closeClickOverlay) {\n            this.closeClickOverlay();\n            delete this.closeClickOverlay;\n        }\n        super.disconnectedCallback();\n    }\n}\nOverlayTrigger.openOverlay = async (target, interaction, content, options) => {\n    return await openOverlay(target, interaction, content, options);\n};\n__decorate([\n    property({ reflect: true })\n], OverlayTrigger.prototype, \"placement\", void 0);\n__decorate([\n    property()\n], OverlayTrigger.prototype, \"type\", void 0);\n__decorate([\n    property({ type: Number, reflect: true })\n], OverlayTrigger.prototype, \"offset\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], OverlayTrigger.prototype, \"disabled\", void 0);\n//# sourceMappingURL=OverlayTrigger.js.map"],"names":["styles","css","OverlayTrigger","LitElement","constructor","this","placement","offset","disabled","hoverOverlayReady","Promise","resolve","overlayTriggerStyles","render","html","onTrigger","onTargetSlotChange","onClickSlotChange","onHoverSlotChange","receivesFocus","type","undefined","event","onTriggerClick","onTriggerMouseEnter","onTriggerMouseLeave","targetContent","clickContent","querySelector","tabIndex","closeClickOverlay","openOverlay","overlayOptions","hoverContent","overlayReady","res","closeHoverOverlay","content","extractSlotContentFromEvent","target","assignedNodes","find","node","HTMLElement","disconnectedCallback","async","interaction","options","__decorate","property","reflect","Number","Boolean"],"mappings":"+GAYA,MAAMA,EAASC,iGCuBFC,UAAuBC,EAApCC,kCAaWC,KAAAC,UAAuB,SAMvBD,KAAAE,OAAS,EAGTF,KAAAG,UAAW,EAwFVH,KAAAI,kBAAoBC,QAAQC,8BAzGhC,MAAO,CAACC,GAuBFC,SACN,OAAOC,uCAAP,mBAAA,mBAAA,0BAAA,kFAAA,sDAAA,2CAGiBT,KAAKU,UACAV,KAAKU,UACLV,KAAKU,UAGDV,KAAKW,mBAMLX,KAAKY,kBAILZ,KAAKa,wCAiB/B,MAAO,CACHX,OAAQF,KAAKE,OACbD,UAAWD,KAAKC,UAChBa,cACId,KAAKe,MAAsB,WAAdf,KAAKe,KAAoB,YAASC,GAInDN,UAAUO,GACd,IAAIjB,KAAKG,gBAGDc,EAAMF,MACV,IAAK,QAED,YADAf,KAAKkB,iBAET,IAAK,aAED,YADAlB,KAAKmB,sBAET,IAAK,aAED,YADAnB,KAAKoB,8CAOb,GAAIpB,KAAKqB,eAAiBrB,KAAKsB,aAAc,CACzC,GAAkB,UAAdtB,KAAKe,KAAkB,CACAf,KAAKuB,cACxB,8EAGAvB,KAAKsB,aAAaE,SAAW,SAG/BH,cAAEA,EAAFC,aAAiBA,GAAiBtB,KACxCA,KAAKyB,wBAA0B5B,EAAe6B,YAC1CL,EACArB,KAAKe,KAAOf,KAAKe,KAAO,QACxBO,EACAtB,KAAK2B,6CASb,GAAI3B,KAAKqB,eAAiBrB,KAAK4B,aAAc,CACzC,IAAIC,EAA2B,OAG/B7B,KAAKI,kBAAoB,IAAIC,QAASyB,IAClCD,EAAeC,IAEnB,MAAMT,cAAEA,EAAFO,aAAiBA,GAAiB5B,KACxCA,KAAK+B,wBAA0BlC,EAAe6B,YAC1CL,EACA,QACAO,EACA5B,KAAK2B,gBAETE,4CAKOzB,kBAEPJ,KAAK+B,oBACL/B,KAAK+B,gCACOA,mBAIZnB,kBAAkBK,GACtB,MAAMe,EAAUhC,KAAKiC,4BAA4BhB,GACjDjB,KAAKsB,aAAeU,EAGhBnB,kBAAkBI,GACtB,MAAMe,EAAUhC,KAAKiC,4BAA4BhB,GACjDjB,KAAK4B,aAAeI,EAGhBrB,mBAAmBM,GACvB,MAAMe,EAAUhC,KAAKiC,4BAA4BhB,GACjDjB,KAAKqB,cAAgBW,EAGjBC,4BAA4BhB,GAEhC,IAAKA,EAAMiB,OACP,OAIJ,OAFajB,EAAMiB,OACAC,gBACNC,KAAMC,GAASA,aAAgBC,aAGzCC,uBAECvC,KAAKyB,oBACLzB,KAAKyB,gCACOA,yBAEVc,wBAtHI1C,EAAA6B,YAAcc,MACxBN,EACAO,EACAT,EACAU,UAEahB,EAAYQ,EAAQO,EAAaT,EAASU,GA/C3DC,EAAA,CADCC,EAAS,CAAEC,SAAS,qCAIrBF,EAAA,CADCC,gCAIDD,EAAA,CADCC,EAAS,CAAE7B,KAAM+B,OAAQD,SAAS,kCAInCF,EAAA,CADCC,EAAS,CAAE7B,KAAMgC,QAASF,SAAS"}