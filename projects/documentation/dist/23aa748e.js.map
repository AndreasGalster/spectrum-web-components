{"version":3,"file":"23aa748e.js","sources":["../../../packages/overlay/src/overlay-timer.js","../../../packages/overlay/src/overlay-stack.js","../../../packages/overlay/src/overlay.js"],"sourcesContent":["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nconst DEFAULT_WARMUP = 1000;\nconst DEFAULT_COOLDOWN = 1000;\n/**\n * A timer to help with implementation of warnup/cooldown behavior as described here:\n * https://spectrum.adobe.com/page/tooltip/#Immediate-or-delayed-appearance\n */\nexport class OverlayTimer {\n    constructor(options = {}) {\n        this.warmUpDelay = DEFAULT_WARMUP;\n        this.coolDownDelay = DEFAULT_COOLDOWN;\n        this.isWarm = false;\n        this.cooldownTimeout = 0;\n        this.timeout = 0;\n        Object.assign(this, options);\n    }\n    async openTimer(component) {\n        this.cancelCooldownTimer();\n        if (!this.component || !component.isSameNode(this.component)) {\n            if (this.component) {\n                this.close(this.component);\n                this.cancelCooldownTimer();\n            }\n            this.component = component;\n            if (this.isWarm) {\n                return false;\n            }\n            this.promise = new Promise((resolve) => {\n                this.resolve = resolve;\n                this.timeout = window.setTimeout(() => {\n                    if (this.resolve) {\n                        this.resolve(false);\n                        this.isWarm = true;\n                    }\n                }, this.warmUpDelay);\n            });\n            return this.promise;\n        }\n        else if (this.promise) {\n            return this.promise;\n        }\n        else {\n            // This should never happen\n            throw new Error('Inconsistent state');\n        }\n    }\n    close(component) {\n        if (this.component && this.component.isSameNode(component)) {\n            this.resetCooldownTimer();\n            if (this.timeout > 0) {\n                clearTimeout(this.timeout);\n                this.timeout = 0;\n            }\n            if (this.resolve) {\n                this.resolve(true);\n                delete this.resolve;\n            }\n            delete this.promise;\n            delete this.component;\n        }\n    }\n    resetCooldownTimer() {\n        if (this.isWarm) {\n            if (this.cooldownTimeout) {\n                window.clearTimeout(this.cooldownTimeout);\n            }\n            this.cooldownTimeout = window.setTimeout(() => {\n                this.isWarm = false;\n                delete this.cooldownTimeout;\n            }, this.coolDownDelay);\n        }\n    }\n    cancelCooldownTimer() {\n        if (this.cooldownTimeout) {\n            window.clearTimeout(this.cooldownTimeout);\n        }\n        delete this.cooldownTimeout;\n    }\n}\n//# sourceMappingURL=overlay-timer.js.map","/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { ActiveOverlay } from './ActiveOverlay.js';\nimport { OverlayTimer } from './overlay-timer.js';\nimport '../active-overlay.js';\nfunction isLeftClick(event) {\n    return event.button === 0;\n}\nfunction hasModifier(event) {\n    return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nexport class OverlayStack {\n    constructor() {\n        this.overlays = [];\n        this.preventMouseRootClose = false;\n        this.root = document.body;\n        this.handlingResize = false;\n        this.overlayTimer = new OverlayTimer();\n        this.canTabTrap = true;\n        this.handleMouseCapture = (event) => {\n            const topOverlay = this.topOverlay;\n            if (!event.target ||\n                !topOverlay ||\n                !topOverlay.overlayContent ||\n                hasModifier(event) ||\n                !isLeftClick(event)) {\n                this.preventMouseRootClose = true;\n                return;\n            }\n            if (event.target instanceof Node) {\n                const path = event.composedPath();\n                if (path.indexOf(topOverlay.overlayContent) >= 0) {\n                    this.preventMouseRootClose = true;\n                    return;\n                }\n                this.preventMouseRootClose = false;\n            }\n        };\n        this.handleMouse = () => {\n            if (!this.preventMouseRootClose) {\n                this.closeTopOverlay();\n            }\n        };\n        this.handleKeyUp = (event) => {\n            if (event.code === 'Escape') {\n                const overlay = this.topOverlay;\n                this.closeTopOverlay();\n                overlay && overlay.trigger.focus();\n            }\n        };\n        this.handleResize = () => {\n            if (this.handlingResize)\n                return;\n            this.handlingResize = true;\n            requestAnimationFrame(async () => {\n                const promises = this.overlays.map((overlay) => overlay.updateOverlayPosition());\n                await Promise.all(promises);\n                this.handlingResize = false;\n            });\n        };\n        this.addEventListeners();\n        this.initTabTrapping();\n    }\n    initTabTrapping() {\n        /* c8 ignore next 4 */\n        if (this.document.body.shadowRoot) {\n            this.canTabTrap = false;\n            return;\n        }\n        this.document.body.attachShadow({ mode: 'open' });\n        /* c8 ignore next 3 */\n        if (!this.document.body.shadowRoot) {\n            return;\n        }\n        const root = this.document.body.shadowRoot;\n        root.innerHTML = `\n            <div id=\"actual\"><slot></slot></div>\n            <style>\n            #actual {\n                position: relative;\n                height: 100%;\n                z-index: 0;\n                min-height: 100vh;\n            }\n            #holder {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                flex-flow: column;\n                height: 100%;\n                width: 100%;\n                top: 0;\n                left: 0;\n                position: fixed;\n            }\n            #holder[hidden] {\n                display: none !important;\n            }\n            #actual[tabindex=\"-1\"] {\n                pointer-events: none;  /* just in case? */\n            }\n            </style>\n            <div id=\"holder\" hidden><slot name=\"open\"></slot></div>\n        `;\n        this.tabTrapper = root.querySelector('#actual');\n        this.overlayHolder = root.querySelector('#holder');\n        this.tabTrapper.attachShadow({ mode: 'open' });\n        if (this.tabTrapper.shadowRoot) {\n            this.tabTrapper.shadowRoot.innerHTML = '<slot></slot>';\n        }\n    }\n    startTabTrapping() {\n        if (!this.canTabTrap) {\n            return;\n        }\n        this.tabTrapper.tabIndex = -1;\n        this.overlayHolder.hidden = false;\n    }\n    stopTabTrapping() {\n        /* c8 ignore next 3 */\n        if (!this.canTabTrap) {\n            return;\n        }\n        this.tabTrapper.removeAttribute('tabindex');\n        this.overlayHolder.hidden = true;\n    }\n    get document() {\n        return this.root.ownerDocument /* c8 ignore next */ || document;\n    }\n    get topOverlay() {\n        return this.overlays.slice(-1)[0];\n    }\n    findOverlayForContent(overlayContent) {\n        for (const item of this.overlays) {\n            if (overlayContent.isSameNode(item.overlayContent)) {\n                return item;\n            }\n        }\n        return undefined;\n    }\n    addEventListeners() {\n        this.document.addEventListener('click', this.handleMouseCapture, true);\n        this.document.addEventListener('click', this.handleMouse);\n        this.document.addEventListener('keyup', this.handleKeyUp);\n        window.addEventListener('resize', this.handleResize);\n    }\n    isClickOverlayActiveForTrigger(trigger) {\n        return this.overlays.some((item) => trigger.isSameNode(item.trigger) &&\n            item.interaction === 'click');\n    }\n    async openOverlay(details) {\n        if (this.findOverlayForContent(details.content)) {\n            return false;\n        }\n        if (details.interaction === 'modal') {\n            this.startTabTrapping();\n        }\n        if (details.delayed) {\n            const promise = this.overlayTimer.openTimer(details.content);\n            const cancelled = await promise;\n            if (cancelled) {\n                return promise;\n            }\n        }\n        if (details.interaction === 'click') {\n            this.closeAllHoverOverlays();\n        }\n        else if (details.interaction === 'hover' &&\n            this.isClickOverlayActiveForTrigger(details.trigger)) {\n            // Don't show a hover popover if the click popover is already active\n            return true;\n        }\n        if (this.overlays.length) {\n            const topOverlay = this.overlays[this.overlays.length - 1];\n            topOverlay.obscure();\n        }\n        const activeOverlay = ActiveOverlay.create(details);\n        document.body.appendChild(activeOverlay);\n        /**\n         * The following work to make the new overlay the \"top\" of the stack\n         * has to happen AFTER the current call stack completes in case there\n         * is work there in to remove the previous \"top\" overlay.\n         */\n        return new Promise((res) => requestAnimationFrame(res)).then(async () => {\n            this.overlays.push(activeOverlay);\n            await activeOverlay.updateComplete;\n            this.addOverlayEventListeners(activeOverlay);\n            if (details.receivesFocus === 'auto') {\n                activeOverlay.focus();\n            }\n            return false;\n        });\n    }\n    addOverlayEventListeners(activeOverlay) {\n        activeOverlay.addEventListener('close', () => {\n            this.hideAndCloseOverlay(activeOverlay);\n        });\n        switch (activeOverlay.interaction) {\n            case 'replace':\n                this.addReplaceOverlayEventListeners(activeOverlay);\n                break;\n            case 'inline':\n                this.addInlineOverlayEventListeners(activeOverlay);\n                break;\n        }\n    }\n    addReplaceOverlayEventListeners(activeOverlay) {\n        activeOverlay.addEventListener('keydown', (event) => {\n            const { code } = event;\n            /* c8 ignore next */\n            if (code !== 'Tab')\n                return;\n            event.stopPropagation();\n            this.closeOverlay(activeOverlay.overlayContent);\n            activeOverlay.tabbingAway = true;\n            activeOverlay.trigger.focus();\n            activeOverlay.trigger.dispatchEvent(new KeyboardEvent('keydown', event));\n        });\n    }\n    addInlineOverlayEventListeners(activeOverlay) {\n        if (!activeOverlay.returnFocusElement) {\n            activeOverlay.returnFocusElement = document.createElement('span');\n            activeOverlay.returnFocusElement.tabIndex = -1;\n            if (activeOverlay.trigger.hasAttribute('slot')) {\n                activeOverlay.returnFocusElement.slot =\n                    activeOverlay.trigger.slot;\n            }\n            activeOverlay.trigger.insertAdjacentElement('afterend', activeOverlay.returnFocusElement);\n        }\n        activeOverlay.trigger.addEventListener('keydown', activeOverlay.handleInlineTriggerKeydown);\n        activeOverlay.addEventListener('keydown', (event) => {\n            const { code, shiftKey } = event;\n            /* c8 ignore next */\n            if (code !== 'Tab')\n                return;\n            activeOverlay.tabbingAway = true;\n            if (shiftKey && activeOverlay.returnFocusElement) {\n                activeOverlay.returnFocusElement.focus();\n                return;\n            }\n            event.stopPropagation();\n            this.closeOverlay(activeOverlay.overlayContent);\n            activeOverlay.trigger.focus();\n        });\n    }\n    closeOverlay(content) {\n        this.overlayTimer.close(content);\n        requestAnimationFrame(() => {\n            const overlay = this.findOverlayForContent(content);\n            this.hideAndCloseOverlay(overlay);\n        });\n    }\n    closeAllHoverOverlays() {\n        for (const overlay of this.overlays) {\n            if (overlay.interaction === 'hover') {\n                this.hideAndCloseOverlay(overlay, false);\n            }\n        }\n    }\n    async hideAndCloseOverlay(overlay, animated) {\n        if (overlay) {\n            await overlay.hide(animated);\n            if (overlay.state != 'dispose')\n                return;\n            const index = this.overlays.indexOf(overlay);\n            if (index >= 0) {\n                this.overlays.splice(index, 1);\n            }\n            if (this.overlays.length) {\n                const topOverlay = this.overlays[this.overlays.length - 1];\n                topOverlay.feature();\n                if (topOverlay.interaction === 'modal') {\n                    topOverlay.focus();\n                }\n                else {\n                    this.stopTabTrapping();\n                }\n            }\n            else {\n                this.stopTabTrapping();\n                if (overlay.interaction === 'modal' ||\n                    ((overlay.interaction === 'replace' ||\n                        overlay.interaction === 'inline') &&\n                        !overlay.tabbingAway)) {\n                    overlay.trigger.focus();\n                }\n                overlay.tabbingAway = false;\n            }\n            overlay.remove();\n            overlay.dispose();\n        }\n    }\n    closeTopOverlay() {\n        return this.hideAndCloseOverlay(this.topOverlay);\n    }\n}\n//# sourceMappingURL=overlay-stack.js.map","/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { OverlayStack } from './overlay-stack.js';\n/**\n * This class allows access to the overlay system which allows a client to\n * position an element in the overlay positioned relative to another node.\n */\nlet Overlay = /** @class */ (() => {\n    class Overlay {\n        /**\n         *\n         * @param owner the parent element we will use to position the overlay element\n         * @param interaction the type of interaction that caused this overlay to be shown\n         * @param overlayElement the item to display as an overlay\n         */\n        constructor(owner, interaction, overlayElement) {\n            this.isOpen = false;\n            this.owner = owner;\n            this.overlayElement = overlayElement;\n            this.interaction = interaction;\n        }\n        /**\n         * Open an overlay\n         *\n         * @param owner the parent element we will use to position the overlay element\n         * @param interaction the type of interaction that caused this overlay to be shown\n         * @param overlayElement the item to display as an overlay\n         * @param options display parameters\n         * @param options.delayed if true delay opening of the overlay based on the global warmup/cooldown timer\n         * @param options.offset distance to offset the overlay\n         * @param options.placement side on which to position the overlay\n         * @returns an Overlay object which can be used to close the overlay\n         */\n        static async open(owner, interaction, overlayElement, options) {\n            const overlay = new Overlay(owner, interaction, overlayElement);\n            await overlay.open(options);\n            return () => {\n                overlay.close();\n            };\n        }\n        static update() {\n            const overlayUpdateEvent = new CustomEvent('sp-update-overlays', {\n                bubbles: true,\n                composed: true,\n                cancelable: true,\n            });\n            document.dispatchEvent(overlayUpdateEvent);\n        }\n        /**\n         * Open an overlay\n         *\n         * @param options display parameters\n         * @param options.delayed delay before opening the overlay\n         * @param options.offset distance to offset the overlay\n         * @param options.placement side on which to position the overlay\n         * @returns a Promise that resolves to true if this operation was cancelled\n         */\n        async open({ delayed, offset = 0, placement = 'top', receivesFocus, }) {\n            /* c8 ignore next */\n            if (this.isOpen)\n                return true;\n            if (delayed === undefined) {\n                delayed = this.overlayElement.hasAttribute('delayed');\n            }\n            const queryThemeDetail = {\n                color: undefined,\n                scale: undefined,\n            };\n            const queryThemeEvent = new CustomEvent('sp-query-theme', {\n                bubbles: true,\n                composed: true,\n                detail: queryThemeDetail,\n                cancelable: true,\n            });\n            this.owner.dispatchEvent(queryThemeEvent);\n            const overlayDetailQuery = {};\n            const queryOverlayDetailEvent = new CustomEvent('sp-overlay-query', {\n                bubbles: true,\n                composed: true,\n                detail: overlayDetailQuery,\n                cancelable: true,\n            });\n            this.overlayElement.dispatchEvent(queryOverlayDetailEvent);\n            await Overlay.overlayStack.openOverlay(Object.assign({ content: this.overlayElement, contentTip: overlayDetailQuery.overlayContentTipElement, delayed, offset: offset, placement: placement, trigger: this.owner, interaction: this.interaction, theme: queryThemeDetail, receivesFocus }, overlayDetailQuery));\n            this.isOpen = true;\n            return true;\n        }\n        /**\n         * Close the overlay if it is open\n         */\n        close() {\n            Overlay.overlayStack.closeOverlay(this.overlayElement);\n        }\n    }\n    Overlay.overlayStack = new OverlayStack();\n    return Overlay;\n})();\nexport { Overlay };\n//# sourceMappingURL=overlay.js.map"],"names":["OverlayTimer","constructor","options","this","warmUpDelay","coolDownDelay","isWarm","cooldownTimeout","timeout","Object","assign","component","cancelCooldownTimer","isSameNode","promise","Error","close","Promise","resolve","window","setTimeout","resetCooldownTimer","clearTimeout","OverlayStack","overlays","preventMouseRootClose","root","document","body","handlingResize","overlayTimer","canTabTrap","handleMouseCapture","event","topOverlay","target","overlayContent","metaKey","altKey","ctrlKey","shiftKey","hasModifier","button","isLeftClick","Node","composedPath","indexOf","handleMouse","closeTopOverlay","handleKeyUp","code","overlay","trigger","focus","handleResize","requestAnimationFrame","async","promises","map","updateOverlayPosition","all","addEventListeners","initTabTrapping","shadowRoot","attachShadow","mode","innerHTML","tabTrapper","querySelector","overlayHolder","startTabTrapping","tabIndex","hidden","stopTabTrapping","removeAttribute","ownerDocument","slice","findOverlayForContent","item","addEventListener","isClickOverlayActiveForTrigger","some","interaction","details","content","delayed","openTimer","closeAllHoverOverlays","length","obscure","activeOverlay","ActiveOverlay","create","appendChild","res","then","push","updateComplete","addOverlayEventListeners","receivesFocus","hideAndCloseOverlay","addReplaceOverlayEventListeners","addInlineOverlayEventListeners","stopPropagation","closeOverlay","tabbingAway","dispatchEvent","KeyboardEvent","returnFocusElement","createElement","hasAttribute","slot","insertAdjacentElement","handleInlineTriggerKeydown","animated","hide","state","index","splice","feature","remove","dispose","Overlay","owner","overlayElement","isOpen","[object Object]","open","overlayUpdateEvent","CustomEvent","bubbles","composed","cancelable","offset","placement","undefined","queryThemeDetail","color","scale","queryThemeEvent","detail","overlayDetailQuery","queryOverlayDetailEvent","overlayStack","openOverlay","contentTip","overlayContentTipElement","theme"],"mappings":"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"}